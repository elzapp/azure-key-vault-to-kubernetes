{"componentChunkName":"component---node-modules-gatsby-theme-apollo-docs-src-components-template-js","path":"/v1.0/how-it-works/","result":{"data":{"site":{"pathPrefix":"","siteMetadata":{"title":"akv2k8s docs","description":"How to get Azure Key Vault objects into Kubernetes"}},"file":{"childMarkdownRemark":null,"childMdx":{"frontmatter":{"title":"How it Works","description":"Learn about the inner workings of akv2k8s."},"headings":[{"value":"The AzureKeyVaultSecret CRD"},{"value":"The Controller"},{"value":"The Env Injector"}],"fields":{"image":"social-cards/how-it-works.png","graphManagerUrl":""},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How it Works\",\n  \"description\": \"Learn about the inner workings of akv2k8s.\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Akv2k8s consist of three main components to integrate with Azure Key Vault:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a Custom Resource Definition called \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"AzureKeyVaultSecret\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Controller\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Env Injector\")), mdx(\"h2\", {\n    \"id\": \"the-azurekeyvaultsecret-crd\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#the-azurekeyvaultsecret-crd\",\n    \"aria-label\": \"the azurekeyvaultsecret crd permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"The AzureKeyVaultSecret CRD\"), mdx(\"p\", null, \"The \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"AzureKeyVaultSecret\"), \" Custom Resource Definition (CRD) contains metadata used by the Controller and Env Injector to access objects in Azure Key Vault. For each secret, certificate or key in AzureKeyVault you want to make available in Kubernetes, you create a \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"AzureKeyVaultSecret\"), \" and provide the following information:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The Kubernetes namespace where the Azure Key Vault secret should be available\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The name of the Azure Key Vault\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The name, type and version (optional) of the Azure Key Vault object\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Optionally which Kubernetes \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Secret\"), \" name and data-key to create \")), mdx(\"p\", null, \"An example \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"AzureKeyVaultSecret\"), \" looks like this:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"yaml\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-yaml line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"# secret-sync.yaml\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token key atrule\"\n  }), \"apiVersion\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" spv.no/v1alpha1\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token key atrule\"\n  }), \"kind\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" AzureKeyVaultSecret\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token key atrule\"\n  }), \"metadata\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token key atrule\"\n  }), \"name\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" secret\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"-\"), \"sync \\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token key atrule\"\n  }), \"namespace\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" akv\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"-\"), \"test\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token key atrule\"\n  }), \"spec\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token key atrule\"\n  }), \"vault\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token key atrule\"\n  }), \"name\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" akv2k8s\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"-\"), \"test \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"# name of key vault\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token key atrule\"\n  }), \"object\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token key atrule\"\n  }), \"name\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" my\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"-\"), \"secret \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"# name of the akv object\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token key atrule\"\n  }), \"type\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" secret \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"# akv object type\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token key atrule\"\n  }), \"output\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"# optional - only used to sync to a kubernetes secret\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token key atrule\"\n  }), \"secret\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" \\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token key atrule\"\n  }), \"name\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" my\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"-\"), \"secret\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"-\"), \"from\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"-\"), \"akv \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"# kubernetes secret name\"), \"\\n      \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token key atrule\"\n  }), \"dataKey\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" secret\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"-\"), \"value \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"# key to store object value in kubernetes secret\")), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"h2\", {\n    \"id\": \"the-controller\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#the-controller\",\n    \"aria-label\": \"the controller permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"The Controller\"), mdx(\"p\", null, \"The Controller is responsible for syncing Azure Key Vault objects into Kubernetes \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Secret\"), \"'s, for all \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"AzureKeyVaultSecret\"), \"'s having \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"spec.output.secret\"), \" defined (like in the example above).\"), mdx(\"p\", null, \"Periodically the Controller will poll Azure Key Vault for version changes of the secret and apply any changes to the Kubernetes \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"Secret\"), \".\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note-1: Pods in Kubernetes currently do not get notifications when Secret resources change, and Pods will have to be re-created or use something like the Wave controller (\", mdx(\"a\", _extends({\n    parentName: \"strong\"\n  }, {\n    \"href\": \"https://github.com/pusher/wave\"\n  }), \"https://github.com/pusher/wave\"), \") to get the changes\"))), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note-2: By default the Controller auto sync secrets every 10 minutes (configurable) and depending on how many secrets are synchronized can cause extra usage costs of Azure Key Vault.\"))), mdx(\"h2\", {\n    \"id\": \"the-env-injector\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#the-env-injector\",\n    \"aria-label\": \"the env injector permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"The Env Injector\"), mdx(\"p\", null, \"The Env Injector is a bit more complex than the Controller and consists of:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a Mutating Admission Webhook (see \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#mutatingadmissionwebhook\"\n  }), \"Kubernetes docs\"), \")\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a Docker image (spvest/azure-keyvault-env) containing the \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"azure-keyvault-env\"), \" executable\")), mdx(\"p\", null, \"Below is an outline of the steps that gets executed when a Pod is scheduled to start, in a namespace enabled for Env-Injector.\"), mdx(ExpansionPanelList, {\n    mdxType: \"ExpansionPanelList\"\n  }, mdx(ExpansionPanelListItem, {\n    number: \"1\",\n    mdxType: \"ExpansionPanelListItem\"\n  }, mdx(\"h3\", {\n    \"id\": \"the-mutating-admission-webhook-triggers\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#the-mutating-admission-webhook-triggers\",\n    \"aria-label\": \"the mutating admission webhook triggers permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"The Mutating Admission Webhook triggers\"), mdx(\"p\", null, \"The Env Injector webhook gets triggered just before every Pod gets created and inspects the Pod definition for environment variables with values containing \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"@azurekeyvault\"), \" (see example below). If it does not find any, the Pod starts as normal. If it does find environment variables with values containing \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"@azurekeyvault\"), \", it mutates (changes) the Pod with:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A init-container (image: spvest/azure-keyvault-env) with these volumes:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A in-memory volume at \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"/azure-keyvault/\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A host volume at \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"/etc/kubernetes/azure.json\"), \" (only for default auth)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Changes the executable for the Pod container (more on that later)\")), mdx(\"p\", null, \"Example where environment variable has value containing \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"@azurekeyvault\"), \":\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"yaml\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"style\": {\n      \"counterReset\": \"linenumber NaN\"\n    },\n    \"className\": \"language-yaml line-numbers\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-yaml\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token key atrule\"\n  }), \"env\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"-\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token key atrule\"\n  }), \"name\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" MY_AKV_SECRET\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token key atrule\"\n  }), \"value\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \":\"), \" some\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"-\"), \"secret@azurekeyvault\"), mdx(\"span\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"className\": \"line-numbers-rows\",\n    \"style\": {\n      \"whiteSpace\": \"normal\",\n      \"width\": \"auto\",\n      \"left\": \"0\"\n    }\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  })))), mdx(\"p\", null, \"As mentioned, the Pod container gets mutated to use a different executable. It does this by changing either the CMD or the ENTRYPOINT, depending on which was used by the original container, to use the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"azure-keyvault-env\"), \" executable instead. The \\\"old\\\" command gets passed in as parameter to this new executable.\")), mdx(ExpansionPanelListItem, {\n    number: \"2\",\n    mdxType: \"ExpansionPanelListItem\"\n  }, mdx(\"h3\", {\n    \"id\": \"the-pod-starts-the-init-container\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#the-pod-starts-the-init-container\",\n    \"aria-label\": \"the pod starts the init container permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"The Pod starts the init-container\"), mdx(\"p\", null, \"When the Env Injector webhook is finished, Kubernetes will start the Pod with its new changes. This will trigger the following sequence:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The init-container will start\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The init-container copies the \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"azure-keyvault-env\"), \" executable into \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"/azure-keyvault/\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"If default authentication is used, the \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"/etc/kubernetes/azure.json\"), \" located on the node, containing Azure AKS default credentials is copied to \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"/azure-keyvault/\"))), mdx(\"p\", null, \"The volume \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"/azure-keyvault/\"), \" is a shared in-memory volume accessible to both the init-container and the original container. This is how the init-container can \\\"give\\\" the original container access to files.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Note: All files located in the volume \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"/azure-keyvault/\"), \" will be deleted as soon as the original container starts up. It would be a security issue to have these files available to the container after startup.\"))), mdx(ExpansionPanelListItem, {\n    number: \"3\",\n    mdxType: \"ExpansionPanelListItem\"\n  }, mdx(\"h3\", {\n    \"id\": \"the-pod-starts-the-original-container\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#the-pod-starts-the-original-container\",\n    \"aria-label\": \"the pod starts the original container permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"The Pod starts the original container\"), mdx(\"p\", null, \"When the original container starts it will execute the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"azure-keyvault-env\"), \" command, which will:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Connect to Azure Key Vault, using credentials found in \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"/azure-keyvault/azure.json\"), \" (when default auth is used) - or use custom credentials\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Download any Azure Key Vault secrets, identified by the environment placeholders\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Delete all content from the shared volume \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"/azure-keyvault/\"), \":\", mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Delete itself (\", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"azure-keyvault-env\"), \")\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Delete \", mdx(\"code\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"/azure-keyvault/azure.json\"), \" - default credentials\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Execute the original command and params, pass on the updated environment variables with real secret values\"))), mdx(ExpansionPanelListItem, {\n    number: \"check\",\n    mdxType: \"ExpansionPanelListItem\"\n  }, mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\u2728The end result is that all secrets gets injected transparently in-memory during container startup. It will not reveal any secret content in the container spec, disk or logs. The only component that can read the secrets, are the program running inside the container. \\u2728\")))));\n}\n;\nMDXContent.isMDXComponent = true;"}}},"pageContext":{"id":"019d0643-0f10-578c-ac27-de848a196963","subtitle":"","versionDifference":-0.10000000000000009,"versionBasePath":"/v1.0","sidebarContents":[{"title":null,"pages":[{"title":"Overview","sidebarTitle":"","description":"Explore Azure Key Vault to Kubernetes","path":"/v1.0/"},{"title":"Why use akv2k8s?","sidebarTitle":"","description":null,"path":"/v1.0/why-akv2k8s/"},{"title":"Quick Start","sidebarTitle":"","description":"Quickly get started using Azure Key Vault to Kubernetes","path":"/v1.0/quick-start/"},{"title":"How it Works","sidebarTitle":"","description":"Learn about the inner workings of akv2k8s.","path":"/v1.0/how-it-works/"}]},{"title":"Installation","pages":[{"title":"Overview","sidebarTitle":"","description":"Different options for installing akv2k8s","path":"/v1.0/installation/"},{"title":"Requirements","sidebarTitle":"","description":"Requirements for installing akv2k8s","path":"/v1.0/installation/requirements/"},{"title":"Installation with Helm","sidebarTitle":"","description":"How to install Azure Key Vault to Kubernetes with Helm","path":"/v1.0/installation/installing-with-helm/"},{"title":"Installation without Helm","sidebarTitle":"","description":"How to setup Azure Key Vault to Kubernetes","path":"/v1.0/installation/installing-without-helm/"},{"title":"Upgrading  with Helm","sidebarTitle":"","description":"How to update Azure Key Vault to Kubernetes with Helm","path":"/v1.0/installation/updating-with-helm/"}]},{"title":"Tutorials","pages":[{"title":"Tutorials","sidebarTitle":"","description":"A quick introduction to the tutorials","path":"/v1.0/tutorials/"},{"title":"Prerequisites","sidebarTitle":"","description":"A quick overview of the prerequisites needed to complete the tutorials","path":"/v1.0/tutorials/prerequisites/"},{"title":"Sync Secret","sidebarTitle":"","description":"Sync a secret from Azure Key Vault into a Kubernetes Secret","path":"/v1.0/tutorials/sync/1-secret/"},{"title":"Sync Certificate","sidebarTitle":"","description":"Sync a certificate from Azure Key Vault into a Kubernetes Secret.","path":"/v1.0/tutorials/sync/2-certificate/"},{"title":"Sync Signing Key","sidebarTitle":"","description":"Sync signing key from Azure Key Vault into a Kubernetes Secret","path":"/v1.0/tutorials/sync/3-signing-key/"},{"title":"Sync Multi Key Value Secret","sidebarTitle":"","description":"Sync a multi-key-value secret from Azure Key Vault into a Kubernetes Secret","path":"/v1.0/tutorials/sync/4-multi-key-value-secret/"},{"title":"Inject Secret","sidebarTitle":"","description":"Inject an Azure Key Vault secret directly into a container application","path":"/v1.0/tutorials/env-injection/1-secret/"},{"title":"Inject Certificate","sidebarTitle":"","description":"Inject an Azure Key Vault certificate key pair directly into a container application","path":"/v1.0/tutorials/env-injection/2-certificate/"},{"title":"Inject Signing Key","sidebarTitle":"","description":"Inject a signing key from Azure Key Vault as environment variable into an application","path":"/v1.0/tutorials/env-injection/3-signing-key/"},{"title":"Inject PFX Certificate","sidebarTitle":"","description":"Inject a PFX certificate from Azure Key Vault as environment variables into an application","path":"/v1.0/tutorials/env-injection/5-pfx-certificate/"}]},{"title":"Security","pages":[{"title":"Authentication with Azure Key Vault","sidebarTitle":"","description":"Learn about the different options for authenticating with Azure Key Vault.","path":"/v1.0/security/authentication/"},{"title":"Authorization","sidebarTitle":"","description":"Learn how to set the proper access rights in Azure Key Vault","path":"/v1.0/security/authorization/"},{"title":"Enable Environment Injecton","sidebarTitle":"","description":"Learn how to enable environment injection per Kubernetes namespace","path":"/v1.0/security/enable-env-injection/"}]},{"title":"Availability","pages":[]},{"title":"Troubleshooting","pages":[{"title":"Get the akv2k8s Controller Log","sidebarTitle":"","description":"How to access the Controller log and specify log level","path":"/v1.0/troubleshooting/controller-log/"},{"title":"Set env-injector log-level","sidebarTitle":"","description":"How to set the log-level for the env-injector","path":"/v1.0/troubleshooting/env-injector-log-level/"},{"title":"Known Issues","sidebarTitle":"","description":"A list of known issues and available solutions or workarounds","path":"/v1.0/troubleshooting/known-issues/"}]},{"title":"Reference","pages":[{"title":"Reference","sidebarTitle":"","description":"Reference of akv2k8s objects","path":"/v1.0/reference/"},{"title":"AzureKeyVaultSecret","sidebarTitle":"","description":"Reference of AzureKeyVaultSecret custom resource definition","path":"/v1.0/reference/azure-key-vault-secret/"}]}],"githubUrl":"https://github.com/sparebankenvest/azure-key-vault-to-kubernetes/tree/doc-version-1.0.2/docs/source/content/how-it-works.mdx","spectrumUrl":"","twitterHandle":"","versions":["1.0"],"defaultVersion":"1.1","baseUrl":"https://akv2k8s.io"}},"staticQueryHashes":["1511030359","2468095761","2468095761","426988268","426988268"]}